def clean_airbnb_data(df):
    #Convertir 'guest_favorite' a booleano
    df['guest_favorite'] = df['guest_favorite'].astype(bool)
    
    #Convertir 'rating' a float
    df['rating'] = pd.to_numeric(df['rating'], errors='coerce')
    
    #Convertir 'number_reviews' a entero
    df['number_reviews'] = pd.to_numeric(df['number_reviews'], errors='coerce').astype('Int64')
    
    #Limpiar y convertir 'price' a float
    df['price'] = df['price'].str.replace('$', '').str.replace(',', '')
    df['price'] = pd.to_numeric(df['price'], errors='coerce')
    
    #Extraer el número de años de 'hosting_time'
    df['hosting_years'] = df['hosting_time'].str.extract('(\d+)').astype(float)
    
    #Convertir 'type_host' a categoría
    df['type_host'] = df['type_host'].astype('category')
    
    #Contar el número de reseñas
    df['review_count'] = df['all_reviews'].apply(len)
    
    #Unir todas las reseñas en un solo string
    df['all_reviews_text'] = df['all_reviews'].apply(' '.join)
    
    #Eliminar columnas innecesarias
    df = df.drop(columns=['hosting_time', 'all_reviews'])
    
    #Reordenar columnas
    column_order = ['guest_favorite', 'rating', 'number_reviews', 'review_count', 'type_host', 
                    'hosting_years', 'price', 'all_reviews_text']
    df = df[column_order]
    
    return df

#Uso
urls = scraping_urls('https://www.airbnb.com/s/Nottingham--England--United-Kingdom/homes')
df_raw = scraping_airbnb(urls)
df_clean = clean_airbnb_data(df_raw)
print(df_clean.head())
print(df_clean.dtypes)
